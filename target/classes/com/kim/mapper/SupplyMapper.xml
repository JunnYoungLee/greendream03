<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kim.mapper.SupplyMapper">

	<!--  해시맵을 이용해서 join값을 알맞게 넘기기 -->
	<resultMap type="java.util.HashMap" id="join_supplier"> 
			<result column="supplier" property="supplier" />
			<result column="business_number" property="business_number" />
			<result column="location" property="location" />
			<result column="supplier_person" property="supplier_person" />
			<result column="contact_infomation" property="contact_infomation" />
			<result column="email" property="email" />
			<result column="medical_supply_code" property="medical_supply_code" />
			<result column="medical_supplies_name" property="medical_supplies_name" />
			<result column="standard" property="standard" />
			<result column="unit" property="unit" />
			<result column="unit_price" property="unit_price" />
			<result column="used_quantity" property="used_quantity" />
			<result column="current_quantity" property="current_quantity" />
			<result column="safety_inventory_quantuty" property="safety_inventory_quantuty" />
			<result column="request_quantity" property="request_quantity" />
			<result column="order_quantity" property="order_quantity" />
			<result column="supply_price" property="supply_price" />
			<result column="surtax" property="surtax" />
			<result column="total_price" property="total_price" />
			<result column="sum" property="sum" />
			<result column="warehousing_quantity" property="warehousing_quantity" />
			<result column="date" property="date" />
			<result column="person_in_charge" property="person_in_charge" />
			<result column="special_note" property="special_note" />
			<result column="progress_status" property="progress_status" />
			<result column="chk_arr" property="chk_arr" />
			<result column="rno" property="rno" />
	</resultMap>

	<!-- resultMap ='join_supplier' 같은 resultMap을 찾아서 실행  -->
	<select id = "join_supplier" resultMap="join_supplier">
		select s.supplier , supplier_person, location, contact_infomation, email, r.rno
		from supplier s join request_check r on s.supplier = r.supplier;
	</select>
	
	<!-- 발주 db에 insert -->
	<insert id="supplyOrder">
		insert into medical_order(dept, medical_supply_code, medical_supplies_name, standard, unit, supplier, unit_price, person_in_charge, special_note, order_quantity, rno, supply_price,surtax,total_price, progress_status)
		(select dept, medical_supply_code, medical_supplies_name, standard, unit, supplier, unit_price, person_in_charge, special_note, request_quantity, rno, unit_price*request_quantity as supply_price,
		unit_price*request_quantity*0.1 as surtax,
		unit_price*request_quantity + unit_price*request_quantity*0.1 as total_price,
		'발주완료' as progress_status from (
				select @rownum:=@rownum+1 rownum, rk.*
				from request_check rk, (select @rownum:=0) as tmp
			) as purchaseList where rno=#{data});
	</insert>
	
	<!-- 발주 db insert 한번에 따로 담는 방법 찾다가 update로.. 방법 찾을시 수정 -->
	<!-- 안 될 시 sql에서 safe모드 해제 -> set sql_safe_updates=0; -->
<!-- 	<update id="supplyOrder_2">
		update medical_order set supply_price=#{supply_price},
			 surtax=#{surtax}, total_price=#{total_price}, order_date=#{order_date} 
		where (select r.rno from supplier s join request_check r on s.supplier = r.supplier where r.rno=#{rno}) =#{rno}
	</update> -->
	
	<!-- 구매 요청 목록에서 발주 신청할 때 여러개의 목록 중 회사는 하나만 가져오기 -->
	<select id="select_supplier" resultMap="join_supplier">
		select s.supplier , supplier_person, location, contact_infomation, email, r.rno
		from supplier s join request_check r on s.supplier = r.supplier where s.supplier = #{supplier} limit 1;
	</select> 
	
	<!-- 공급회사 목록  -->
	<select id = "supplyList" resultType="com.kim.model.SupplyDTO">
		select * from 
			(
				select @rownum:=@rownum+1 rownum, s.*
				from supplier s, (select @rownum:=0) as tmp
			) as supplyList where supplier = (select supplier from medical_order where rno=#{rno} limit 1) limit 1;
<!-- 		<![CDATA[
		where rownum > (#{pageNum}-1)*#{amount} and rownum <= #{pageNum}*#{amount};
		]]> -->
		
<!-- 		select * from supplier order by no asc -->
	</select>
	
	<!-- <select id = "supplyList_2" resultMap="join_supplier">
		select * from (select @rownum:=@rownum+1 rownum, s.* from supplier s, (select @rownum:=0) as tmp) as supplyList where supplier = (select supplier from request_check where rno=4)
	</select> -->
	
	<!-- 구매 요청 페이지  -->
	<select id = "purchaseList" resultType="com.kim.model.OrderDTO">
		select *,
		unit_price*request_quantity as supply_price,
	 	unit_price*request_quantity*0.1 as surtax,
	 	unit_price*request_quantity + unit_price*request_quantity*0.1 as total_price
		from (
				select @rownum:=@rownum+1 rownum, rk.*
				from request_check rk, (select @rownum:=0) as tmp
			) as purchaseList where rno = #{chk_arr};
	</select>
	
	<select id = "purchaseSum" resultType="int">
		select SUM(unit_price*request_quantity + unit_price*request_quantity*0.1) as sum
		from (
				select @rownum:=@rownum+1 rownum, rk.*
				from request_check rk, (select @rownum:=0) as tmp
			) as purchaseList where rno = #{chk_arr};
	</select>

	
	<!-- 거래명세서  -->
	<select id = "supplyOrderList" resultType="com.kim.model.SupplyOrderDTO">
		select * 
      	from (
            select @rownum:=@rownum+1 rownum, mo.*
            from medical_order mo, (select @rownum:=0) as tmp
                order by rno desc
         ) as supplyOrderList where rno =#{rno} ;
		
	</select>
	
	<select id = "orderMember" resultType="com.kim.model.YangMemberDTO">
		select * from membership where (name = (select person_in_charge from request_check where rno=#{hidden} limit 1) and dept = (select dept from request_check where rno=#{hidden} limit 1));
	</select>
	
	<select id = "purchaseList_1" resultType="com.kim.model.OrderDTO">
		select * from dht where(motion, mtime) in (select motion, max(mtime) as mtime from dht group by motion)order by mtime desc) t group by t.motion;
	</select>
	
	<!-- 입고 완료 리스트 -->
	<select id="storeList" resultType="com.kim.model.SupplyOrderDTO">
		select * from warehousing where progress_status='완료'
	</select>

	<!-- 발주 완료 -->
<!-- 	<selete id = "complete"  resultType="com.kim.model.SupplyOrderDTO">
		select * from medical_order where progress_status='발주완료'
	</selete> -->
	
</mapper>